(()=>{var e={603:e=>{const t=e=>{document.getElementById("errorMessage").textContent=e,document.getElementById("domoMessage").classList.remove("hidden")};e.exports={handleError:t,sendPost:async(e,a,o)=>{const r=await fetch(e,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(a)}),m=await r.json();document.getElementById("domoMessage").classList.add("hidden"),m.redirect&&(window.location=m.redirect),m.error&&t(m.error),o&&o(m)},hideError:()=>{document.getElementById("domoMessage").classList.add("hidden")}}}},t={};function a(o){var r=t[o];if(void 0!==r)return r.exports;var m=t[o]={exports:{}};return e[o](m,m.exports,a),m.exports}(()=>{const e=a(603),t=t=>{t.preventDefault(),e.hideError();const a=t.target.querySelector("#domoName").value,o=t.target.querySelector("#domoAge").value,r=t.target.querySelector("#domoWeight").value,m=t.target.querySelector("#_csrf").value;return a&&o&&r?(e.sendPost(t.target.action,{name:a,age:o,weight:r,_csrf:m},n),!1):(e.handleError("All fields are required"),!1)},o=t=>{t.preventDefault(),e.hideError();const a=t.target.querySelector("#domoId").value,o=t.target.querySelector("#_csrf").value;return a?(e.sendPost(t.target.action,{_id:a,_csrf:o},n),!1):(e.handleError("Could not identify Domo"),!1)},r=e=>React.createElement("form",{id:"domoForm",onSubmit:t,name:"domoForm",action:"/maker",method:"POST",className:"domoForm"},React.createElement("label",{htmlFor:"name"},"Name: "),React.createElement("input",{id:"domoName",type:"text",name:"name",placeholder:"Domo Name"}),React.createElement("label",{htmlFor:"age"},"Age: "),React.createElement("input",{id:"domoAge",type:"number",min:"0",name:"age"}),React.createElement("label",{htmlFor:"weight"},"Weight: "),React.createElement("input",{id:"domoWeight",type:"number",min:"0",name:"weight"}),React.createElement("input",{id:"_csrf",type:"hidden",name:"_csrf",value:e.csrf}),React.createElement("input",{className:"makeDomoSubmit",type:"submit",value:"Make Domo"})),m=e=>{if(0===e.domos.length)return React.createElement("div",{className:"domoList"},React.createElement("h3",{className:"emptyDomo"},"No Domos Yet!"));const t=e.domos.map((t=>React.createElement("div",{key:t._id,className:"domo"},React.createElement("img",{src:"/assets/img/domoface.jpeg",alt:"domo face",className:"domoFace"}),React.createElement("h3",{className:"domoName"}," Name: ",t.name," "),React.createElement("h3",{className:"domoAge"}," Age: ",t.age," "),React.createElement("h3",{className:"domoWeight"}," Weight: ",t.weight," "),React.createElement("form",{id:"deleteForm",onSubmit:o,name:"deleteForm",action:"/delete",method:"POST",className:"deleteForm"},React.createElement("input",{id:"domoId",type:"hidden",name:"domoId",value:t._id}),React.createElement("input",{id:"_csrf",type:"hidden",name:"_csrf",value:e.csrf}),React.createElement("input",{id:"deleteSubmit",type:"submit",value:"Delete"})))));return React.createElement("div",{className:"domoList"},t)},n=async()=>{const e=await fetch("/getDomos"),t=await e.json(),a=await fetch("/getToken"),o=await a.json();ReactDOM.render(React.createElement(m,{csrf:o.csrfToken,domos:t.domos}),document.getElementById("domos"))};window.onload=async()=>{const e=await fetch("/getToken"),t=await e.json();ReactDOM.render(React.createElement(r,{csrf:t.csrfToken}),document.getElementById("makeDomo")),ReactDOM.render(React.createElement(m,{csrf:t.csrfToken,domos:[]}),document.getElementById("domos")),n()}})()})();